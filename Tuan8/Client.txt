package Test;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;

import Test.Client.MessagesFromServerListener;
import Test.Client.SendButtonListener;
import Test.Client.SendPressEnterListener;

public class TestClient {

    JFrame clientFrame;
    JPanel clientPanel;
    JTextArea textArea_Messages;
    JTextField textField_ClientMessage;
    JButton button_SendMessage;
    JTextField textField_Username;
    JScrollPane scrollPane_Messages;
   
    Socket s;
    PrintWriter writer;
    BufferedReader read;
    
    public static void main(String[] args) {
        TestClient c = new TestClient();
        c.createGUI();
}
    
    public void createGUI(){
    	
    	clientFrame = new JFrame  ("Chat Room");
    	clientFrame.setSize(500, 400);
    	
    	clientPanel = new JPanel();
    	
    	textArea_Messages= new JTextArea();
    	textArea_Messages.setEditable(false);
    	
    	 textField_ClientMessage = new JTextField(24);
    	 textField_ClientMessage.addKeyListener(new SendPressEnterListener());
    	 
    	 button_SendMessage = new JButton("G?i");
         button_SendMessage.addActionListener(new SendButtonListener());
         
         textField_Username = new JTextField(10);
         
         scrollPane_Messages = new JScrollPane(textArea_Messages);
         scrollPane_Messages.setPreferredSize(new Dimension(400, 300));
   //      scrollPane_Messages.setMinimumSize(new Dimension(500, 500));
        scrollPane_Messages.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
         scrollPane_Messages.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);   
       if(connectToServer()) {

   }
  
         
         Thread t = new Thread(new MessagesFromServerListener()); //T?o lu?ng 
         t.start();
        
         clientPanel.add(scrollPane_Messages);
         clientPanel.add(textField_Username);
         clientPanel.add(textField_ClientMessage);
         clientPanel.add(button_SendMessage);
        
         // Panel
         clientFrame.getContentPane().add(BorderLayout.CENTER, clientPanel);
        
         clientFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         clientFrame.setVisible(true);
    
        
    	
    }
    
    public boolean connectToServer() {
        try {
                s = new Socket("localhost", 7777);   //T?o socket v?i port là 7777
                read = new BufferedReader(new InputStreamReader(s.getInputStream())); //   Lu?ng nh?n tin
                writer = new PrintWriter(s.getOutputStream()); // lu?n g?i tin
                appendTextMessages("K?t n?i d?n Server");
               
                return true;
        } catch(Exception e) {
                appendTextMessages("Chua m? Server");
                e.printStackTrace();
               
                return false;
        }
        
        
}
    public void sendMessageToServer() {   //Hàm g?i tin nh?n d?n Server
        writer.println(textField_Username.getText() + ": " + textField_ClientMessage.getText()); //g?i Tên username và n?i dung chát lên ph?n chát
        writer.flush();  //Xóa n?i dung text
       
        textField_ClientMessage.setText("");

}
    
    public void appendTextMessages(String message) { //Hàm n?i chu?i
        textArea_Messages.append(message + "\n"); // Hi?n th? lên khung chat
}
    
    public class SendPressEnterListener implements KeyListener {
    	 
        @Override
        public void keyPressed(KeyEvent arg0) { //B?t s? ki?n b?t kì khi nh?n phím nào dó
        	
                if(arg0.getKeyCode() == KeyEvent.VK_ENTER) { // cái này là nh?n ENTER
                        sendMessageToServer();
                }      
        }

        @Override
        public void keyReleased(KeyEvent arg0) {}

        @Override
        public void keyTyped(KeyEvent arg0) {}
       
}

public class SendButtonListener implements ActionListener { //Hàm vi?t s? ki?n cho nút g?i

        @Override
        public void actionPerformed(ActionEvent e) {
                sendMessageToServer();                 
        }
       
}

public class MessagesFromServerListener implements Runnable {

        @Override
        public void run() {
                String message;
               
                try {
                        while((message = read.readLine()) != null) { // Nhan tin nh?n t? sever ki?m tra có khác null không
                                appendTextMessages(message); 		//G?i lên ph?n chat 
                           
                        }
                } catch (IOException e) {
                        appendTextMessages("Khong the nhan tin nhan!");
                        e.printStackTrace();
                }
        }
       
}
    
    
    
    

}
